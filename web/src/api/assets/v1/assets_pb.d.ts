// @generated by protoc-gen-es v1.2.1
// @generated from file assets/v1/assets.proto (package datalift.assets.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message datalift.assets.v1.FetchRequest
 */
export declare class FetchRequest extends Message<FetchRequest> {
  constructor(data?: PartialMessage<FetchRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.assets.v1.FetchRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FetchRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FetchRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FetchRequest;

  static equals(a: FetchRequest | PlainMessage<FetchRequest> | undefined, b: FetchRequest | PlainMessage<FetchRequest> | undefined): boolean;
}

/**
 * @generated from message datalift.assets.v1.FetchResponse
 */
export declare class FetchResponse extends Message<FetchResponse> {
  constructor(data?: PartialMessage<FetchResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.assets.v1.FetchResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FetchResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FetchResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FetchResponse;

  static equals(a: FetchResponse | PlainMessage<FetchResponse> | undefined, b: FetchResponse | PlainMessage<FetchResponse> | undefined): boolean;
}

