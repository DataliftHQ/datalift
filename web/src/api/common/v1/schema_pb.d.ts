// @generated by protoc-gen-es v1.2.1
// @generated from file common/v1/schema.proto (package datalift.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum datalift.common.v1.ActionType
 */
export declare enum ActionType {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: READ = 2;
   */
  READ = 2,

  /**
   * @generated from enum value: UPDATE = 3;
   */
  UPDATE = 3,

  /**
   * @generated from enum value: DELETE = 4;
   */
  DELETE = 4,
}

/**
 * @generated from message datalift.common.v1.Action
 */
export declare class Action extends Message<Action> {
  /**
   * The type of action being performed.
   *
   * @generated from field: datalift.common.v1.ActionType type = 1;
   */
  type: ActionType;

  constructor(data?: PartialMessage<Action>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.common.v1.Action";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Action;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Action;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Action;

  static equals(a: Action | PlainMessage<Action> | undefined, b: Action | PlainMessage<Action> | undefined): boolean;
}

/**
 * @generated from message datalift.common.v1.Pattern
 */
export declare class Pattern extends Message<Pattern> {
  /**
   * The type URL for the resource.
   *
   * @generated from field: string type_url = 1;
   */
  typeUrl: string;

  /**
   * A string describing the resource name in terms
   * of message members.
   *
   * @generated from field: string pattern = 2;
   */
  pattern: string;

  constructor(data?: PartialMessage<Pattern>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.common.v1.Pattern";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pattern;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pattern;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pattern;

  static equals(a: Pattern | PlainMessage<Pattern> | undefined, b: Pattern | PlainMessage<Pattern> | undefined): boolean;
}

/**
 * @generated from message datalift.common.v1.Identifier
 */
export declare class Identifier extends Message<Identifier> {
  /**
   * @generated from field: repeated datalift.common.v1.Pattern patterns = 1;
   */
  patterns: Pattern[];

  constructor(data?: PartialMessage<Identifier>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.common.v1.Identifier";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Identifier;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Identifier;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Identifier;

  static equals(a: Identifier | PlainMessage<Identifier> | undefined, b: Identifier | PlainMessage<Identifier> | undefined): boolean;
}

/**
 * @generated from message datalift.common.v1.Reference
 */
export declare class Reference extends Message<Reference> {
  /**
   * The field(s) which contain nested ResourceIdentifiers to
   * identify resources contained in the message.
   *
   * @generated from field: repeated string fields = 1;
   */
  fields: string[];

  constructor(data?: PartialMessage<Reference>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.common.v1.Reference";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Reference;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Reference;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Reference;

  static equals(a: Reference | PlainMessage<Reference> | undefined, b: Reference | PlainMessage<Reference> | undefined): boolean;
}

/**
 * Message used to represent redacted messages.
 *
 * @generated from message datalift.common.v1.Redacted
 */
export declare class Redacted extends Message<Redacted> {
  /**
   * @generated from field: string redacted_type_url = 1;
   */
  redactedTypeUrl: string;

  constructor(data?: PartialMessage<Redacted>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.common.v1.Redacted";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Redacted;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Redacted;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Redacted;

  static equals(a: Redacted | PlainMessage<Redacted> | undefined, b: Redacted | PlainMessage<Redacted> | undefined): boolean;
}

