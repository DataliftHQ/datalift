// @generated by protoc-gen-es v1.2.1
// @generated from file common/v1/error.proto (package datalift.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Status } from "../../google/rpc/status_pb.js";

/**
 * Any error information beyond code and status should be included here and
 * added to the error in the status details field. The frontend knows how to
 * render all of the fields in a user-friendly way. If there is extremely
 * verbose error information, consider adding it using a different type, e.g.
 * from the errdetails package. Any details not using this type will still be
 * accessible to the user in a raw format.
 *
 * @generated from message datalift.common.v1.ErrorDetails
 */
export const ErrorDetails = proto3.makeMessageType(
  "datalift.common.v1.ErrorDetails",
  () => [
    { no: 1, name: "wrapped", kind: "message", T: Status, repeated: true },
  ],
);

