// @generated by protoc-gen-es v1.2.1
// @generated from file audit/v1/audit.proto (package datalift.audit.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Any, BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ActionType } from "../../common/v1/schema_pb.js";
import type { Status } from "../../google/rpc/status_pb.js";

/**
 * @generated from message datalift.audit.v1.TimeRange
 */
export declare class TimeRange extends Message<TimeRange> {
  /**
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  constructor(data?: PartialMessage<TimeRange>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.TimeRange";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimeRange;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimeRange;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimeRange;

  static equals(a: TimeRange | PlainMessage<TimeRange> | undefined, b: TimeRange | PlainMessage<TimeRange> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.GetEventsRequest
 */
export declare class GetEventsRequest extends Message<GetEventsRequest> {
  /**
   * @generated from oneof datalift.audit.v1.GetEventsRequest.window
   */
  window: {
    /**
     * @generated from field: datalift.audit.v1.TimeRange range = 1;
     */
    value: TimeRange;
    case: "range";
  } | {
    /**
     * @generated from field: google.protobuf.Duration since = 2;
     */
    value: Duration;
    case: "since";
  } | { case: undefined; value?: undefined };

  /**
   * Currently page_token specifies the page number you wish to request.
   * The rationale behind the naming is we might changes this to a cursor implentation
   * in the future and did not want to break existing implementations of the API.
   * https://cloud.google.com/apis/design/design_patterns#list_pagination
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * @generated from field: uint64 limit = 4;
   */
  limit: bigint;

  constructor(data?: PartialMessage<GetEventsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.GetEventsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsRequest;

  static equals(a: GetEventsRequest | PlainMessage<GetEventsRequest> | undefined, b: GetEventsRequest | PlainMessage<GetEventsRequest> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.Resource
 */
export declare class Resource extends Message<Resource> {
  /**
   * @generated from field: string type_url = 1;
   */
  typeUrl: string;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  constructor(data?: PartialMessage<Resource>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.Resource";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource;

  static equals(a: Resource | PlainMessage<Resource> | undefined, b: Resource | PlainMessage<Resource> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.RequestMetadata
 */
export declare class RequestMetadata extends Message<RequestMetadata> {
  /**
   * @generated from field: google.protobuf.Any body = 1;
   */
  body?: Any;

  constructor(data?: PartialMessage<RequestMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.RequestMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestMetadata;

  static equals(a: RequestMetadata | PlainMessage<RequestMetadata> | undefined, b: RequestMetadata | PlainMessage<RequestMetadata> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.ResponseMetadata
 */
export declare class ResponseMetadata extends Message<ResponseMetadata> {
  /**
   * @generated from field: google.protobuf.Any body = 1;
   */
  body?: Any;

  constructor(data?: PartialMessage<ResponseMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.ResponseMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseMetadata;

  static equals(a: ResponseMetadata | PlainMessage<ResponseMetadata> | undefined, b: ResponseMetadata | PlainMessage<ResponseMetadata> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.RequestEvent
 */
export declare class RequestEvent extends Message<RequestEvent> {
  /**
   * What attempted the action.
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * The service performing the operation.
   *
   * @generated from field: string service_name = 2;
   */
  serviceName: string;

  /**
   * The method being called.
   *
   * @generated from field: string method_name = 3;
   */
  methodName: string;

  /**
   * The type of operation being performed.
   *
   * @generated from field: datalift.common.v1.ActionType type = 4;
   */
  type: ActionType;

  /**
   * The status of the overall operation.
   *
   * @generated from field: google.rpc.Status status = 5;
   */
  status?: Status;

  /**
   * The resources touched during the event.
   *
   * @generated from field: repeated datalift.audit.v1.Resource resources = 6;
   */
  resources: Resource[];

  /**
   * The API request saved as metadata for the event.
   *
   * @generated from field: datalift.audit.v1.RequestMetadata request_metadata = 7;
   */
  requestMetadata?: RequestMetadata;

  /**
   * The API response saved as metadata for the event.
   *
   * @generated from field: datalift.audit.v1.ResponseMetadata response_metadata = 8;
   */
  responseMetadata?: ResponseMetadata;

  constructor(data?: PartialMessage<RequestEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.RequestEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestEvent;

  static equals(a: RequestEvent | PlainMessage<RequestEvent> | undefined, b: RequestEvent | PlainMessage<RequestEvent> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.Event
 */
export declare class Event extends Message<Event> {
  /**
   * When the event happened.
   *
   * @generated from field: google.protobuf.Timestamp occurred_at = 1;
   */
  occurredAt?: Timestamp;

  /**
   * @generated from oneof datalift.audit.v1.Event.event_type
   */
  eventType: {
    /**
     * @generated from field: datalift.audit.v1.RequestEvent event = 2;
     */
    value: RequestEvent;
    case: "event";
  } | { case: undefined; value?: undefined };

  /**
   * The event id.
   *
   * @generated from field: int64 id = 3;
   */
  id: bigint;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.GetEventsResponse
 */
export declare class GetEventsResponse extends Message<GetEventsResponse> {
  /**
   * @generated from field: repeated datalift.audit.v1.Event events = 1;
   */
  events: Event[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<GetEventsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.GetEventsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsResponse;

  static equals(a: GetEventsResponse | PlainMessage<GetEventsResponse> | undefined, b: GetEventsResponse | PlainMessage<GetEventsResponse> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.GetEventRequest
 */
export declare class GetEventRequest extends Message<GetEventRequest> {
  /**
   * @generated from field: int64 event_id = 1;
   */
  eventId: bigint;

  constructor(data?: PartialMessage<GetEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.GetEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventRequest;

  static equals(a: GetEventRequest | PlainMessage<GetEventRequest> | undefined, b: GetEventRequest | PlainMessage<GetEventRequest> | undefined): boolean;
}

/**
 * @generated from message datalift.audit.v1.GetEventResponse
 */
export declare class GetEventResponse extends Message<GetEventResponse> {
  /**
   * @generated from field: datalift.audit.v1.Event event = 1;
   */
  event?: Event;

  constructor(data?: PartialMessage<GetEventResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "datalift.audit.v1.GetEventResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventResponse;

  static equals(a: GetEventResponse | PlainMessage<GetEventResponse> | undefined, b: GetEventResponse | PlainMessage<GetEventResponse> | undefined): boolean;
}

