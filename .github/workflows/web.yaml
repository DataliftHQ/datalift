name: web
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    paths:
    - 'web/**'
    - .github/workflows/web.yaml
    - Makefile

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: node_modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: build cache
        if: |
          steps.node-modules-cache.outputs.cache-hit == 'true' &&
          github.ref != 'refs/heads/master'
        id: build-cache
        uses: actions/cache@v3
        with:
          path: |
            **/dist
            **/app/build
            **/tsconfig.tsbuildinfo
            !**/node_modules
          key: ${{ runner.os }}-fe-build-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --cwd web install
      - name: build
        run: make web
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: node_modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --cwd web install
      - name: Compile
        run: make web
      - name: Lint
        run: make web-lint
#      - run: make frontend-verify
#      - run: yarn --cwd frontend test:licenses
