name: release

on: push

#on:
#  push:
#    tags:
#      - 'v*.*.*'

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  goreleaser:
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.0.5
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.14.2
      - name: Install UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          install-only: true
      - name: dockerhub-login
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Login - GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: node_modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --cwd ui install
      - name: Compile
        run: make web
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        env:
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
