name: release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY_IMAGE: datalifthq/datalift

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.14.2
      - name: Install UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          install-only: true
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: node_modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --cwd web install
      - name: Compile
        run: make web
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            datalfthq/datalift
            ghcr.io/datalfthq/datalift
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login into Docker Hub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
